server:
  port: 8001
spring:
  profiles:
    active: local
  application:
    name: core-app
  r2dbc:
    url: r2dbc:tc:postgresql:///testdb?TC_IMAGE_TAG=14-alpine
# logging
logging:
  level:
    com.nantaaditya.framework.redis: DEBUG
    com.nantaaditya.framework.helper: INFO
#    io.r2dbc.postgresql.QUERY: DEBUG
#    io.r2dbc.postgresql.PARAM: DEBUG

# rest
rest-log:
  enable: true
  masked:
    payloads:
      - email
  ignored-paths:
    GET:
      - /webjars/**

test.rest:
  enable: true
  baseUrl: http://localhost:8001
  defaultHeaders:
    Content-Type:
      - application/json
    Accept:
      - application/json

audit.idempotent-check.configurations:
  TopUpRequest:
    idempotentFields:
      - $.memberId
      - $.referenceId
    checker: dbIdempotentChecker

metrics:
  timer:
    slow-response-threshold: 1000

# reactor schedulers
schedulers.configurations:
  changelog-schedulers:
    type: NEW_BOUNDED_ELASTIC
    new-bounded-elastic:
      name: changelog-schedulers
  subscriber-scheduler:
    type: NEW_BOUNDED_ELASTIC
    new-bounded-elastic:
      name: subscriber-scheduler
      core-pool-size: 4
      queue-size: 10
  publisher-scheduler:
    type: NEW_BOUNDED_ELASTIC
    new-bounded-elastic:
      core-pool-size: 4
      queue-size: 10
      name: publisher-scheduler

# kafka
reactor.kafka:
  dbIdempotentFilterEnable: true
  subscriber:
    host: ${KAFKA_HOST:http://localhost:9092}
    groupId: core-app
    schedulerConfiguration:
      name: subscriber-scheduler
    props:
      "[auto.offset.reset]": latest
  publisher:
    host: ${KAFKA_HOST:http://localhost:9092}
    retry-configuration:
      type: FIXED_DELAY
    schedulerConfiguration:
      name: publisher-scheduler
      props:
        acks: all
