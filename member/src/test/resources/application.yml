test.rest:
  enable: true
  baseUrl: http://localhost:8000
  defaultHeaders:
    Content-Type:
      - application/json
    Accept:
      - application/json
spring:
  profiles:
    active: local
  application:
    name: member-app
  r2dbc:
    url: r2dbc:h2:mem:///memberdb
    username: 'sa'
    password: ''
# logging
logging:
  level:
    com.nantaaditya.framework.test: DEBUG
    com.nantaaditya.framework.redis: DEBUG
    com.nantaaditya.framework.helper: DEBUG
    com.nantaaditya.framework.kafka: DEBUG

# command
command:
  cache:
    configurations:
      getMemberCommandImpl: 60s
    enable: true
  interceptor:
    configurations:
      getMemberCommandImpl:
        - beanName: commandCacheInterceptor
          action: AFTER_SUCCESS
# rest
rest-log:
  enable: true
  masked:
    headers:
      - User-Agent
    payloads:
      - email
    responses:
      - email
  ignored-paths:
    GET:
      - /webjars/**
server:
  port: 8000

# schedulers
schedulers.configurations:
  publisher-scheduler:
    type: NEW_BOUNDED_ELASTIC
    new-bounded-elastic:
      core-pool-size: 4
      queue-size: 10
      name: publisher-scheduler
  subscriber-scheduler:
    type: NEW_BOUNDED_ELASTIC
    new-bounded-elastic:
      name: subscriber-scheduler
      core-pool-size: 4
      queue-size: 10

# kafka
reactor.kafka:
  dbIdempotentFilterEnable: true
  subscriber:
    host: ${KAFKA_HOST:http://localhost:9092}
    groupId: core-app
    schedulerConfiguration:
      name: subscriber-scheduler
    props:
      "[auto.offset.reset]": latest
  publisher:
    host: ${KAFKA_HOST:http://localhost:9092}
    retry-configuration:
      type: FIXED_DELAY
    schedulerConfiguration:
      name: publisher-scheduler
      props:
        acks: all